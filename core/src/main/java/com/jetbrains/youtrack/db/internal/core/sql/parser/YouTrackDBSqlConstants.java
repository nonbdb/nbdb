/* Generated By:JJTree&JavaCC: Do not edit this line. YouTrackDBSqlConstants.java */
package com.jetbrains.youtrack.db.internal.core.sql.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface YouTrackDBSqlConstants {

  /**
   * End of File.
   */
  int EOF = 0;
  /** RegularExpression Id. */
  int FORMAL_COMMENT = 8;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 9;
  /** RegularExpression Id. */
  int SELECT = 11;
  /** RegularExpression Id. */
  int TRAVERSE = 12;
  /** RegularExpression Id. */
  int MATCH = 13;
  /** RegularExpression Id. */
  int INSERT = 14;
  /** RegularExpression Id. */
  int CREATE = 15;
  /** RegularExpression Id. */
  int DELETE = 16;
  /** RegularExpression Id. */
  int VERTEX = 17;
  /** RegularExpression Id. */
  int EDGE = 18;
  /** RegularExpression Id. */
  int UPDATE = 19;
  /** RegularExpression Id. */
  int UPSERT = 20;
  /** RegularExpression Id. */
  int FROM = 21;
  /** RegularExpression Id. */
  int TO = 22;
  /** RegularExpression Id. */
  int WHERE = 23;
  /** RegularExpression Id. */
  int WHILE = 24;
  /** RegularExpression Id. */
  int INTO = 25;
  /** RegularExpression Id. */
  int VALUE = 26;
  /** RegularExpression Id. */
  int VALUES = 27;
  /** RegularExpression Id. */
  int SET = 28;
  /** RegularExpression Id. */
  int ADD = 29;
  /** RegularExpression Id. */
  int PUT = 30;
  /** RegularExpression Id. */
  int MERGE = 31;
  /** RegularExpression Id. */
  int CONTENT = 32;
  /** RegularExpression Id. */
  int REMOVE = 33;
  /** RegularExpression Id. */
  int INCREMENT = 34;
  /** RegularExpression Id. */
  int AND = 35;
  /** RegularExpression Id. */
  int OR = 36;
  /** RegularExpression Id. */
  int NULL = 37;
  /** RegularExpression Id. */
  int DEFINED = 38;
  /** RegularExpression Id. */
  int ORDER = 39;
  /** RegularExpression Id. */
  int GROUP = 40;
  /** RegularExpression Id. */
  int BY = 41;
  /** RegularExpression Id. */
  int LIMIT = 42;
  /** RegularExpression Id. */
  int SKIP2 = 43;
  /** RegularExpression Id. */
  int BATCH = 44;
  /** RegularExpression Id. */
  int OFFSET = 45;
  /** RegularExpression Id. */
  int TIMEOUT = 46;
  /** RegularExpression Id. */
  int ASC = 47;
  /** RegularExpression Id. */
  int AS = 48;
  /** RegularExpression Id. */
  int DESC = 49;
  /** RegularExpression Id. */
  int FETCHPLAN = 50;
  /** RegularExpression Id. */
  int RETURN = 51;
  /** RegularExpression Id. */
  int BEFORE = 52;
  /** RegularExpression Id. */
  int AFTER = 53;
  /** RegularExpression Id. */
  int RECORD = 54;
  /** RegularExpression Id. */
  int WAIT = 55;
  /** RegularExpression Id. */
  int RETRY = 56;
  /** RegularExpression Id. */
  int LET = 57;
  /** RegularExpression Id. */
  int CACHE = 58;
  /** RegularExpression Id. */
  int CYCLE = 59;
  /** RegularExpression Id. */
  int NOCACHE = 60;
  /** RegularExpression Id. */
  int NOLIMIT = 61;
  /** RegularExpression Id. */
  int NOCYCLE = 62;
  /** RegularExpression Id. */
  int UNSAFE = 63;
  /** RegularExpression Id. */
  int PARALLEL = 64;
  /** RegularExpression Id. */
  int STRATEGY = 65;
  /** RegularExpression Id. */
  int DEPTH_FIRST = 66;
  /** RegularExpression Id. */
  int BREADTH_FIRST = 67;
  /** RegularExpression Id. */
  int LUCENE = 68;
  /** RegularExpression Id. */
  int NEAR = 69;
  /** RegularExpression Id. */
  int WITHIN = 70;
  /** RegularExpression Id. */
  int UNWIND = 71;
  /** RegularExpression Id. */
  int MAXDEPTH = 72;
  /** RegularExpression Id. */
  int MINDEPTH = 73;
  /** RegularExpression Id. */
  int CLASS = 74;
  /** RegularExpression Id. */
  int SUPERCLASS = 75;
  /** RegularExpression Id. */
  int CLASSES = 76;
  /** RegularExpression Id. */
  int SUPERCLASSES = 77;
  /** RegularExpression Id. */
  int UPDATABLE = 78;
  /** RegularExpression Id. */
  int EXCEPTION = 79;
  /** RegularExpression Id. */
  int PROFILE = 80;
  /** RegularExpression Id. */
  int STORAGE = 81;
  /** RegularExpression Id. */
  int ON = 82;
  /** RegularExpression Id. */
  int OFF = 83;
  /** RegularExpression Id. */
  int TRUNCATE = 84;
  /** RegularExpression Id. */
  int POLYMORPHIC = 85;
  /** RegularExpression Id. */
  int FIND = 86;
  /** RegularExpression Id. */
  int REFERENCES = 87;
  /** RegularExpression Id. */
  int EXTENDS = 88;
  /** RegularExpression Id. */
  int CLUSTERS = 89;
  /** RegularExpression Id. */
  int ABSTRACT = 90;
  /** RegularExpression Id. */
  int ALTER = 91;
  /** RegularExpression Id. */
  int NAME = 92;
  /** RegularExpression Id. */
  int SHORTNAME = 93;
  /** RegularExpression Id. */
  int STRICT_MODE = 94;
  /** RegularExpression Id. */
  int ADD_CLUSTER = 95;
  /** RegularExpression Id. */
  int REMOVE_CLUSTER = 96;
  /** RegularExpression Id. */
  int CUSTOM = 97;
  /** RegularExpression Id. */
  int CLUSTER_SELECTION = 98;
  /** RegularExpression Id. */
  int DESCRIPTION = 99;
  /** RegularExpression Id. */
  int DROP = 100;
  /** RegularExpression Id. */
  int PROPERTY = 101;
  /** RegularExpression Id. */
  int FORCE = 102;
  /** RegularExpression Id. */
  int METADATA = 103;
  /** RegularExpression Id. */
  int INDEX = 104;
  /** RegularExpression Id. */
  int COLLATE = 105;
  /** RegularExpression Id. */
  int ENGINE = 106;
  /** RegularExpression Id. */
  int REBUILD = 107;
  /** RegularExpression Id. */
  int ID = 108;
  /** RegularExpression Id. */
  int DATABASE = 109;
  /** RegularExpression Id. */
  int OPTIMIZE = 110;
  /** RegularExpression Id. */
  int LINK = 111;
  /** RegularExpression Id. */
  int TYPE = 112;
  /** RegularExpression Id. */
  int INVERSE = 113;
  /** RegularExpression Id. */
  int EXPLAIN = 114;
  /** RegularExpression Id. */
  int GRANT = 115;
  /** RegularExpression Id. */
  int REVOKE = 116;
  /** RegularExpression Id. */
  int READ = 117;
  /** RegularExpression Id. */
  int EXECUTE = 118;
  /** RegularExpression Id. */
  int ALL = 119;
  /** RegularExpression Id. */
  int NONE = 120;
  /** RegularExpression Id. */
  int FUNCTION = 121;
  /** RegularExpression Id. */
  int PARAMETERS = 122;
  /** RegularExpression Id. */
  int IDEMPOTENT = 123;
  /** RegularExpression Id. */
  int LANGUAGE = 124;
  /** RegularExpression Id. */
  int BEGIN = 125;
  /** RegularExpression Id. */
  int COMMIT = 126;
  /** RegularExpression Id. */
  int ROLLBACK = 127;
  /** RegularExpression Id. */
  int IF = 128;
  /** RegularExpression Id. */
  int ELSE = 129;
  /** RegularExpression Id. */
  int CONTINUE = 130;
  /** RegularExpression Id. */
  int FAIL = 131;
  /** RegularExpression Id. */
  int SLEEP = 132;
  /** RegularExpression Id. */
  int CONSOLE = 133;
  /** RegularExpression Id. */
  int BLOB = 134;
  /** RegularExpression Id. */
  int SHARED = 135;
  /** RegularExpression Id. */
  int DEFAULT_ = 136;
  /** RegularExpression Id. */
  int SEQUENCE = 137;
  /** RegularExpression Id. */
  int START = 138;
  /** RegularExpression Id. */
  int OPTIONAL = 139;
  /** RegularExpression Id. */
  int COUNT = 140;
  /** RegularExpression Id. */
  int DISTINCT = 141;
  /** RegularExpression Id. */
  int HA = 142;
  /** RegularExpression Id. */
  int STATUS = 143;
  /** RegularExpression Id. */
  int SERVER = 144;
  /** RegularExpression Id. */
  int SYNC = 145;
  /** RegularExpression Id. */
  int EXISTS = 146;
  /** RegularExpression Id. */
  int FOREACH = 147;
  /** RegularExpression Id. */
  int MOVE = 148;
  /** RegularExpression Id. */
  int DEPTH_ALIAS = 149;
  /** RegularExpression Id. */
  int PATH_ALIAS = 150;
  /** RegularExpression Id. */
  int IDENTIFIED = 151;
  /** RegularExpression Id. */
  int ROLE = 152;
  /** RegularExpression Id. */
  int USER = 153;
  /** RegularExpression Id. */
  int USERS = 154;
  /** RegularExpression Id. */
  int RID = 155;
  /** RegularExpression Id. */
  int SECURITY = 156;
  /** RegularExpression Id. */
  int POLICY = 157;
  /** RegularExpression Id. */
  int SYSTEM = 158;
  /** RegularExpression Id. */
  int THIS = 159;
  /** RegularExpression Id. */
  int RECORD_ATTRIBUTE = 160;
  /** RegularExpression Id. */
  int RID_ATTR = 161;
  /** RegularExpression Id. */
  int RID_STRING = 162;
  /** RegularExpression Id. */
  int CLASS_ATTR = 163;
  /** RegularExpression Id. */
  int VERSION_ATTR = 164;
  /** RegularExpression Id. */
  int SIZE_ATTR = 165;
  /** RegularExpression Id. */
  int TYPE_ATTR = 166;
  /** RegularExpression Id. */
  int RAW_ATTR = 167;
  /** RegularExpression Id. */
  int RID_ID_ATTR = 168;
  /** RegularExpression Id. */
  int RID_POS_ATTR = 169;
  /** RegularExpression Id. */
  int FIELDS_ATTR = 170;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 171;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 172;
  /** RegularExpression Id. */
  int HEX_LITERAL = 173;
  /** RegularExpression Id. */
  int OCTAL_LITERAL = 174;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 175;
  /** RegularExpression Id. */
  int DECIMAL_FLOATING_POINT_LITERAL = 176;
  /** RegularExpression Id. */
  int DECIMAL_EXPONENT = 177;
  /** RegularExpression Id. */
  int HEXADECIMAL_FLOATING_POINT_LITERAL = 178;
  /** RegularExpression Id. */
  int HEXADECIMAL_EXPONENT = 179;
  /** RegularExpression Id. */
  int CHARACTER_LITERAL = 180;
  /** RegularExpression Id. */
  int STRING_LITERAL = 181;
  /** RegularExpression Id. */
  int INTEGER_RANGE = 182;
  /** RegularExpression Id. */
  int ELLIPSIS_INTEGER_RANGE = 183;
  /** RegularExpression Id. */
  int TRUE = 184;
  /** RegularExpression Id. */
  int FALSE = 185;
  /** RegularExpression Id. */
  int LPAREN = 186;
  /** RegularExpression Id. */
  int RPAREN = 187;
  /** RegularExpression Id. */
  int LBRACE = 188;
  /** RegularExpression Id. */
  int RBRACE = 189;
  /** RegularExpression Id. */
  int LBRACKET = 190;
  /** RegularExpression Id. */
  int RBRACKET = 191;
  /** RegularExpression Id. */
  int SEMICOLON = 192;
  /** RegularExpression Id. */
  int COMMA = 193;
  /** RegularExpression Id. */
  int DOT = 194;
  /** RegularExpression Id. */
  int AT = 195;
  /** RegularExpression Id. */
  int DOLLAR = 196;
  /** RegularExpression Id. */
  int BACKTICK = 197;
  /** RegularExpression Id. */
  int EQ = 198;
  /** RegularExpression Id. */
  int EQEQ = 199;
  /** RegularExpression Id. */
  int LT = 200;
  /** RegularExpression Id. */
  int GT = 201;
  /** RegularExpression Id. */
  int BANG = 202;
  /** RegularExpression Id. */
  int TILDE = 203;
  /** RegularExpression Id. */
  int HOOK = 204;
  /** RegularExpression Id. */
  int COLON = 205;
  /** RegularExpression Id. */
  int LE = 206;
  /** RegularExpression Id. */
  int GE = 207;
  /** RegularExpression Id. */
  int NE = 208;
  /** RegularExpression Id. */
  int NEQ = 209;
  /** RegularExpression Id. */
  int SC_OR = 210;
  /** RegularExpression Id. */
  int SC_AND = 211;
  /** RegularExpression Id. */
  int INCR = 212;
  /** RegularExpression Id. */
  int DECR = 213;
  /** RegularExpression Id. */
  int PLUS = 214;
  /** RegularExpression Id. */
  int MINUS = 215;
  /** RegularExpression Id. */
  int STAR = 216;
  /** RegularExpression Id. */
  int SLASH = 217;
  /** RegularExpression Id. */
  int BIT_AND = 218;
  /** RegularExpression Id. */
  int NULL_COALESCING = 219;
  /** RegularExpression Id. */
  int BIT_OR = 220;
  /** RegularExpression Id. */
  int XOR = 221;
  /** RegularExpression Id. */
  int REM = 222;
  /** RegularExpression Id. */
  int LSHIFT = 223;
  /** RegularExpression Id. */
  int PLUSASSIGN = 224;
  /** RegularExpression Id. */
  int MINUSASSIGN = 225;
  /** RegularExpression Id. */
  int STARASSIGN = 226;
  /** RegularExpression Id. */
  int SLASHASSIGN = 227;
  /** RegularExpression Id. */
  int ANDASSIGN = 228;
  /** RegularExpression Id. */
  int ORASSIGN = 229;
  /** RegularExpression Id. */
  int XORASSIGN = 230;
  /** RegularExpression Id. */
  int REMASSIGN = 231;
  /** RegularExpression Id. */
  int LSHIFTASSIGN = 232;
  /** RegularExpression Id. */
  int RSIGNEDSHIFTASSIGN = 233;
  /** RegularExpression Id. */
  int RUNSIGNEDSHIFTASSIGN = 234;
  /** RegularExpression Id. */
  int RSHIFT = 235;
  /** RegularExpression Id. */
  int RUNSIGNEDSHIFT = 236;
  /** RegularExpression Id. */
  int ELLIPSIS = 237;
  /** RegularExpression Id. */
  int RANGE = 238;
  /** RegularExpression Id. */
  int NOT = 239;
  /** RegularExpression Id. */
  int IN = 240;
  /** RegularExpression Id. */
  int LIKE = 241;
  /** RegularExpression Id. */
  int IS = 242;
  /** RegularExpression Id. */
  int BETWEEN = 243;
  /** RegularExpression Id. */
  int CONTAINS = 244;
  /** RegularExpression Id. */
  int CONTAINSALL = 245;
  /** RegularExpression Id. */
  int CONTAINSANY = 246;
  /** RegularExpression Id. */
  int CONTAINSKEY = 247;
  /** RegularExpression Id. */
  int CONTAINSVALUE = 248;
  /** RegularExpression Id. */
  int CONTAINSTEXT = 249;
  /** RegularExpression Id. */
  int MATCHES = 250;
  /** RegularExpression Id. */
  int KEY = 251;
  /** RegularExpression Id. */
  int INSTANCEOF = 252;
  /** RegularExpression Id. */
  int CLUSTER = 253;
  /** RegularExpression Id. */
  int IDENTIFIER = 254;
  /** RegularExpression Id. */
  int QUOTED_IDENTIFIER = 255;
  /** RegularExpression Id. */
  int INDEX_COLON = 256;
  /** RegularExpression Id. */
  int INDEXVALUES_IDENTIFIER = 257;
  /** RegularExpression Id. */
  int INDEXVALUESASC_IDENTIFIER = 258;
  /** RegularExpression Id. */
  int INDEXVALUESDESC_IDENTIFIER = 259;
  /** RegularExpression Id. */
  int CLUSTER_IDENTIFIER = 260;
  /** RegularExpression Id. */
  int CLUSTER_NUMBER_IDENTIFIER = 261;
  /** RegularExpression Id. */
  int METADATA_IDENTIFIER = 262;
  /** RegularExpression Id. */
  int LETTER = 263;
  /** RegularExpression Id. */
  int PART_LETTER = 264;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_FORMAL_COMMENT = 1;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 2;

  /** Literal token values. */
  String[] tokenImage = {
      "<EOF>",
      "\" \"",
      "\"\\t\"",
      "\"\\n\"",
      "\"\\r\"",
      "\"\\f\"",
      "<token of kind 6>",
      "\"/*\"",
      "\"*/\"",
      "\"*/\"",
      "<token of kind 10>",
      "<SELECT>",
      "<TRAVERSE>",
      "<MATCH>",
      "<INSERT>",
      "<CREATE>",
      "<DELETE>",
      "<VERTEX>",
      "<EDGE>",
      "<UPDATE>",
      "<UPSERT>",
      "<FROM>",
      "<TO>",
      "<WHERE>",
      "<WHILE>",
      "<INTO>",
      "<VALUE>",
      "<VALUES>",
      "<SET>",
      "<ADD>",
      "<PUT>",
      "<MERGE>",
      "<CONTENT>",
      "<REMOVE>",
      "<INCREMENT>",
      "<AND>",
      "<OR>",
      "<NULL>",
      "<DEFINED>",
      "<ORDER>",
      "<GROUP>",
      "<BY>",
      "<LIMIT>",
      "<SKIP2>",
      "<BATCH>",
      "<OFFSET>",
      "<TIMEOUT>",
      "<ASC>",
      "<AS>",
      "<DESC>",
      "<FETCHPLAN>",
      "<RETURN>",
      "<BEFORE>",
      "<AFTER>",
      "<RECORD>",
      "<WAIT>",
      "<RETRY>",
      "<LET>",
      "<CACHE>",
      "<CYCLE>",
      "<NOCACHE>",
      "<NOLIMIT>",
      "<NOCYCLE>",
      "<UNSAFE>",
      "<PARALLEL>",
      "<STRATEGY>",
      "<DEPTH_FIRST>",
      "<BREADTH_FIRST>",
      "<LUCENE>",
      "<NEAR>",
      "<WITHIN>",
      "<UNWIND>",
      "<MAXDEPTH>",
      "<MINDEPTH>",
      "<CLASS>",
      "<SUPERCLASS>",
      "<CLASSES>",
      "<SUPERCLASSES>",
      "<UPDATABLE>",
      "<EXCEPTION>",
      "<PROFILE>",
      "<STORAGE>",
      "<ON>",
      "<OFF>",
      "<TRUNCATE>",
      "<POLYMORPHIC>",
      "<FIND>",
      "<REFERENCES>",
      "<EXTENDS>",
      "<CLUSTERS>",
      "<ABSTRACT>",
      "<ALTER>",
      "<NAME>",
      "<SHORTNAME>",
      "<STRICT_MODE>",
      "<ADD_CLUSTER>",
      "<REMOVE_CLUSTER>",
      "<CUSTOM>",
      "<CLUSTER_SELECTION>",
      "<DESCRIPTION>",
      "<DROP>",
      "<PROPERTY>",
      "<FORCE>",
      "<METADATA>",
      "<INDEX>",
      "<COLLATE>",
      "<ENGINE>",
      "<REBUILD>",
      "<ID>",
      "<DATABASE>",
      "<OPTIMIZE>",
      "<LINK>",
      "<TYPE>",
      "<INVERSE>",
      "<EXPLAIN>",
      "<GRANT>",
      "<REVOKE>",
      "<READ>",
      "<EXECUTE>",
      "<ALL>",
      "<NONE>",
      "<FUNCTION>",
      "<PARAMETERS>",
      "<IDEMPOTENT>",
      "<LANGUAGE>",
      "<BEGIN>",
      "<COMMIT>",
      "<ROLLBACK>",
      "<IF>",
      "<ELSE>",
      "<CONTINUE>",
      "<FAIL>",
      "<SLEEP>",
      "<CONSOLE>",
      "<BLOB>",
      "<SHARED>",
      "<DEFAULT_>",
      "<SEQUENCE>",
      "<START>",
      "<OPTIONAL>",
      "<COUNT>",
      "<DISTINCT>",
      "<HA>",
      "<STATUS>",
      "<SERVER>",
      "<SYNC>",
      "<EXISTS>",
      "<FOREACH>",
      "<MOVE>",
      "<DEPTH_ALIAS>",
      "<PATH_ALIAS>",
      "<IDENTIFIED>",
      "<ROLE>",
      "<USER>",
      "<USERS>",
      "<RID>",
      "<SECURITY>",
      "<POLICY>",
      "<SYSTEM>",
      "<THIS>",
      "<RECORD_ATTRIBUTE>",
      "<RID_ATTR>",
      "<RID_STRING>",
      "<CLASS_ATTR>",
      "<VERSION_ATTR>",
      "<SIZE_ATTR>",
      "<TYPE_ATTR>",
      "<RAW_ATTR>",
      "<RID_ID_ATTR>",
      "<RID_POS_ATTR>",
      "<FIELDS_ATTR>",
      "<INTEGER_LITERAL>",
      "<DECIMAL_LITERAL>",
      "<HEX_LITERAL>",
      "<OCTAL_LITERAL>",
      "<FLOATING_POINT_LITERAL>",
      "<DECIMAL_FLOATING_POINT_LITERAL>",
      "<DECIMAL_EXPONENT>",
      "<HEXADECIMAL_FLOATING_POINT_LITERAL>",
      "<HEXADECIMAL_EXPONENT>",
      "<CHARACTER_LITERAL>",
      "<STRING_LITERAL>",
      "<INTEGER_RANGE>",
      "<ELLIPSIS_INTEGER_RANGE>",
      "<TRUE>",
      "<FALSE>",
      "\"(\"",
      "\")\"",
      "\"{\"",
      "\"}\"",
      "\"[\"",
      "\"]\"",
      "\";\"",
      "\",\"",
      "\".\"",
      "\"@\"",
      "\"$\"",
      "\"`\"",
      "\"=\"",
      "\"==\"",
      "\"<\"",
      "\">\"",
      "\"!\"",
      "\"~\"",
      "\"?\"",
      "\":\"",
      "\"<=\"",
      "\">=\"",
      "\"!=\"",
      "\"<>\"",
      "\"||\"",
      "\"&&\"",
      "\"++\"",
      "\"--\"",
      "\"+\"",
      "\"-\"",
      "\"*\"",
      "\"/\"",
      "\"&\"",
      "\"??\"",
      "\"|\"",
      "\"^\"",
      "\"%\"",
      "\"<<\"",
      "\"+=\"",
      "\"-=\"",
      "\"*=\"",
      "\"/=\"",
      "\"&=\"",
      "\"|=\"",
      "\"^=\"",
      "\"%=\"",
      "\"<<=\"",
      "\">>=\"",
      "\">>>=\"",
      "\">>\"",
      "\">>>\"",
      "\"...\"",
      "\"..\"",
      "<NOT>",
      "<IN>",
      "<LIKE>",
      "<IS>",
      "<BETWEEN>",
      "<CONTAINS>",
      "<CONTAINSALL>",
      "<CONTAINSANY>",
      "<CONTAINSKEY>",
      "<CONTAINSVALUE>",
      "<CONTAINSTEXT>",
      "<MATCHES>",
      "<KEY>",
      "<INSTANCEOF>",
      "<CLUSTER>",
      "<IDENTIFIER>",
      "<QUOTED_IDENTIFIER>",
      "<INDEX_COLON>",
      "<INDEXVALUES_IDENTIFIER>",
      "<INDEXVALUESASC_IDENTIFIER>",
      "<INDEXVALUESDESC_IDENTIFIER>",
      "<CLUSTER_IDENTIFIER>",
      "<CLUSTER_NUMBER_IDENTIFIER>",
      "<METADATA_IDENTIFIER>",
      "<LETTER>",
      "<PART_LETTER>",
      "\"#\"",
      "\"__@recordmap@___\"",
      "\"round-robin\"",
      "\"-servers\"",
      "\"-db\"",
      "\"-latency\"",
      "\"-messages\"",
      "\"-locks\"",
      "\"-all\"",
      "\"-output=text\"",
      "\"-force\"",
      "\"-full\"",
      "\"-full_replace\"",
      "\"-merge\"",
  };

}
