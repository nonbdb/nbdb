/* Generated By:JJTree: Do not edit this line. ORid.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=true,NODE_PREFIX=O,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.jetbrains.youtrack.db.internal.core.sql.parser;

import com.jetbrains.youtrack.db.internal.core.command.OBasicCommandContext;
import com.jetbrains.youtrack.db.internal.core.command.OCommandContext;
import com.jetbrains.youtrack.db.internal.core.db.YTDatabaseSessionInternal;
import com.jetbrains.youtrack.db.internal.core.db.record.YTIdentifiable;
import com.jetbrains.youtrack.db.internal.core.id.YTRecordId;
import com.jetbrains.youtrack.db.internal.core.sql.executor.YTResult;
import com.jetbrains.youtrack.db.internal.core.sql.executor.YTResultInternal;
import java.util.Map;
import java.util.Objects;

public class ORid extends SimpleNode {

  protected OInteger cluster;
  protected OInteger position;

  protected OExpression expression;
  protected boolean legacy;

  public ORid(int id) {
    super(id);
  }

  public ORid(OrientSql p, int id) {
    super(p, id);
  }

  @Override
  public String toString(String prefix) {
    return "#" + cluster.getValue() + ":" + position.getValue();
  }

  public void toString(Map<Object, Object> params, StringBuilder builder) {
    if (legacy || (expression == null && cluster != null && position != null)) {
      builder.append("#" + cluster.getValue() + ":" + position.getValue());
    } else {
      builder.append("{\"@rid\":");
      expression.toString(params, builder);
      builder.append("}");
    }
  }

  public void toGenericStatement(StringBuilder builder) {
    if (legacy || (expression == null && cluster != null && position != null)) {
      builder.append(PARAMETER_PLACEHOLDER);
    } else {
      builder.append("{\"@rid\":");
      expression.toGenericStatement(builder);
      builder.append("}");
    }
  }

  public YTRecordId toRecordId(YTResult target, OCommandContext ctx) {
    if (legacy || (expression == null && cluster != null && position != null)) {
      return new YTRecordId(cluster.value.intValue(), position.value.longValue());
    } else {
      Object result = expression.execute(target, ctx);
      if (result == null) {
        return null;
      }
      if (result instanceof YTIdentifiable) {
        return (YTRecordId) ((YTIdentifiable) result).getIdentity();
      }
      if (result instanceof String) {
        return new YTRecordId((String) result);
      }
      return null;
    }
  }

  public YTRecordId toRecordId(YTIdentifiable target, OCommandContext ctx) {
    if (legacy || (expression == null && cluster != null && position != null)) {
      return new YTRecordId(cluster.value.intValue(), position.value.longValue());
    } else {
      Object result = expression.execute(target, ctx);
      if (result == null) {
        return null;
      }
      if (result instanceof YTIdentifiable) {
        return (YTRecordId) ((YTIdentifiable) result).getIdentity();
      }
      if (result instanceof String) {
        return new YTRecordId((String) result);
      }
      return null;
    }
  }

  public ORid copy() {
    ORid result = new ORid(-1);
    result.cluster = cluster == null ? null : cluster.copy();
    result.position = position == null ? null : position.copy();
    result.expression = expression == null ? null : expression.copy();
    result.legacy = legacy;
    return result;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }

    ORid oRid = (ORid) o;

    if (!Objects.equals(cluster, oRid.cluster)) {
      return false;
    }
    if (!Objects.equals(position, oRid.position)) {
      return false;
    }
    if (!Objects.equals(expression, oRid.expression)) {
      return false;
    }
    return legacy == oRid.legacy;
  }

  @Override
  public int hashCode() {
    int result = cluster != null ? cluster.hashCode() : 0;
    result = 31 * result + (position != null ? position.hashCode() : 0);
    result = 31 * result + (expression != null ? expression.hashCode() : 0);
    return result;
  }

  public void setCluster(OInteger cluster) {
    this.cluster = cluster;
  }

  public void setPosition(OInteger position) {
    this.position = position;
  }

  public void setLegacy(boolean b) {
    this.legacy = b;
  }

  public OInteger getCluster() {
    if (expression != null) {
      YTRecordId rid = toRecordId((YTResult) null, new OBasicCommandContext());
      if (rid != null) {
        OInteger result = new OInteger(-1);
        result.setValue(rid.getClusterId());
        return result;
      }
    }
    return cluster;
  }

  public OInteger getPosition() {
    if (expression != null) {
      YTRecordId rid = toRecordId((YTResult) null, new OBasicCommandContext());
      if (rid != null) {
        OInteger result = new OInteger(-1);
        result.setValue(rid.getClusterPosition());
        return result;
      }
    }
    return position;
  }

  public YTResult serialize(YTDatabaseSessionInternal db) {
    YTResultInternal result = new YTResultInternal(db);
    if (cluster != null) {
      result.setProperty("cluster", cluster.serialize(db));
    }
    if (position != null) {
      result.setProperty("position", position.serialize(db));
    }
    if (expression != null) {
      result.setProperty("expression", expression.serialize(db));
    }
    result.setProperty("legacy", legacy);
    return result;
  }

  public void deserialize(YTResult fromResult) {
    if (fromResult.getProperty("cluster") != null) {
      cluster = new OInteger(-1);
      cluster.deserialize(fromResult.getProperty("cluster"));
    }
    if (fromResult.getProperty("position") != null) {
      position = new OInteger(-1);
      position.deserialize(fromResult.getProperty("position"));
    }
    if (fromResult.getProperty("expression") != null) {
      expression = new OExpression(-1);
      expression.deserialize(fromResult.getProperty("expression"));
    }
    legacy = fromResult.getProperty("legacy");
  }
}
/* JavaCC - OriginalChecksum=c2c6d67d7722e29212e438574698d7cd (do not edit this line) */
