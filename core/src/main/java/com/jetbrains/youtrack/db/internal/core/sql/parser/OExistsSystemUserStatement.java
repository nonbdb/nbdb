/* Generated By:JJTree: Do not edit this line. OExistsSystemUserStatement.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=true,NODE_PREFIX=O,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.jetbrains.youtrack.db.internal.core.sql.parser;

import com.jetbrains.youtrack.db.internal.core.command.OServerCommandContext;
import com.jetbrains.youtrack.db.internal.core.db.OSystemDatabase;
import com.jetbrains.youtrack.db.internal.core.sql.executor.YTResultInternal;
import com.jetbrains.youtrack.db.internal.core.sql.executor.YTResultSet;
import com.jetbrains.youtrack.db.internal.core.sql.executor.resultset.OExecutionStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

public class OExistsSystemUserStatement extends OSimpleExecServerStatement {

  protected OIdentifier name;

  protected OInputParameter nameParam;

  public OExistsSystemUserStatement(int id) {
    super(id);
  }

  public OExistsSystemUserStatement(OrientSql p, int id) {
    super(p, id);
  }

  @Override
  public OExecutionStream executeSimple(OServerCommandContext ctx) {

    OSystemDatabase systemDb = ctx.getServer().getSystemDatabase();
    var res = systemDb.executeWithDB(
        (db) -> {
          YTResultInternal result = new YTResultInternal(db);
          result.setProperty("operation", "exists system user");
          if (name != null) {
            result.setProperty("name", name.getStringValue());
          } else {
            result.setProperty("name", nameParam.getValue(ctx.getInputParameters()));
          }
          List<Object> params = new ArrayList<>();
          if (name != null) {
            params.add(name.getStringValue());
          } else {
            params.add(nameParam.getValue(ctx.getInputParameters()));
          }
          // INSERT INTO OUser SET

          try (YTResultSet rs = db.command("SELECT FROM OUser WHERE name = ?", params.toArray())) {
            if (rs.hasNext()) {
              result.setProperty("exists", true);
            } else {
              result.setProperty("exists", false);
            }
          }
          return result;
        });

    return OExecutionStream.singleton(res);
  }

  @Override
  public void toString(Map<Object, Object> params, StringBuilder builder) {
    builder.append("EXISTS SYSTEM USER ");
    if (name != null) {
      name.toString(params, builder);
    } else {
      nameParam.toString(params, builder);
    }
  }

  @Override
  public OExistsSystemUserStatement copy() {
    OExistsSystemUserStatement result = new OExistsSystemUserStatement(-1);
    result.name = name == null ? null : name.copy();
    result.nameParam = nameParam == null ? null : nameParam.copy();
    return result;
  }
}
/* JavaCC - OriginalChecksum=6df1219621900cc168a7a1d8bef2fa31 (do not edit this line) */
